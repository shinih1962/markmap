import{s as d}from"./toast-483b9908.js";const c=class{constructor(t,e){this.type=t,this.data=e,this.desc=c.descriptions[t]||"Unknown"}asUrl(){switch(this.type){case"gist":const[t,e]=this.data.split(":");return`https://gist.githubusercontent.com/raw/${t}/${e||"markmap.md"}`;case"github":const[n,s]=this.data.split(":"),[r,a]=n.split("@");return`https://raw.githubusercontent.com/${r}/${a||"main"}/${s||"README.md"}`;default:return this.data}}asData(){switch(this.type){case"gist":case"github":return`${this.type}:${this.data}`;default:return this.data}}async load(){const t=this.asUrl(),e=await fetch(t);return p(e),e.text()}static parse(t){if(t instanceof c)return t;let e,n;for(const s of["gist","github"])if(t.startsWith(`${s}:`)){e=s,n=t.slice(s.length+1);break}if(!e){const s=new URL(t);if(s.origin==="https://raw.githubusercontent.com"){const[,r,a,i,...o]=s.pathname.split("/");e="github",n=[`${r}/${a}`,i&&`@${i}`,o.length&&`:${o.join("/")}`].filter(Boolean).join("")}else if(s.origin==="https://gist.githubusercontent.com"||s.origin==="https://gist.github.com"){const{pathname:r}=s;let a,i;r.startsWith("/raw/")?([,,a,...i]=s.pathname.split("/"),i[0]==="raw"&&i.shift()):[,,a,,...i]=s.pathname.split("/"),e="gist",n=[a,i.length&&`${i.join("/")}`].filter(Boolean).join(":")}}return e||(e="url",n=t),new c(e,n)}};let u=c;u.descriptions={gist:"GitHub Gist",github:"GitHub Raw",url:"URL"};const f=u.parse("gist:af76a4c245b302206b16aec503dbe07b");function g(t){return t.replace(/[<&]/g,e=>({"<":"&lt;","&":"&amp;"})[e])}function p(t){if(!t.ok)throw new TypeError(`Failed to fetch, got response "${t.status} ${t.statusText}"`);return t}function m(t){return u.parse(t).load()}const w=(t=>()=>t++)(0);function b(t){let e;async function n(){const s=w();e=s;const r=new URLSearchParams(window.location.hash.slice(1));let a=r.get("gist");const i=r.get("d");if(a&&!i){a.includes(":")||(a=`gist:${a}`);const l=`#?d=${a}`;await Promise.resolve(),window.location.hash=l;return}let o,h;try{h=await m(i||f)}catch(l){o=l}if(s===e&&(h&&t(h),o))if(o.name==="TypeError"&&/failed to fetch/i.test(o.message))d({title:"Failed to fetch",html:['<div class="mt-1">Please check your network and resource</div>',i&&`<div class="mt-1 text-xs text-gray-600">${g(i)}</div>`].filter(Boolean).join("")});else throw o}return n}function v(t){const e=b(t);return window.addEventListener("hashchange",e),e(),()=>window.removeEventListener("hashchange",e)}export{u as U,f as d,m as l,v as s};
